trigger:
  branches:
    include:
    - main
  paths:
    include:
    - azure-pipelines.yml
    - 'Fakebook.Profile'

pr:
- 'main'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: build
  jobs:
  - job: build
    variables:
      sdkVersion: '5.x'
      buildConfiguration: 'Release'
  
    steps:
    - task: UseDotNet@2
      displayName: dotnet sdk 2.x
      inputs:
        packageType: 'sdk'
        version: '2.x'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud'
        organization: '2011-nov02-net'
        scannerMode: 'MSBuild'
        projectKey: '2011-fakebook-project3_profile'
        projectName: 'profile'
        extraProperties: |
          sonar.exclusions=**/lib/**
          sonar.cs.opencover.reportsPaths = $(Agent.TempDirectory)/**/coverage.opencover.xml

    - task: UseDotNet@2
      displayName: 'Use .NET 5 SDK'
      inputs:
        packageType: 'sdk'
        version: '5.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        workingDirectory: 'Fakebook.Profile/Fakebook.Profile.RestApi'

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: dotnet build
      workingDirectory: 'Fakebook.Profile/Fakebook.Profile.RestApi'
      
    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: 'test'
        arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
        publishTestResults: true
        workingDirectory: 'Fakebook.Profile'

    - script: dotnet publish --configuration $(buildConfiguration) --output publish
      displayName: dotnet publish
      workingDirectory: 'Fakebook.Profile/Fakebook.Profile.RestApi'

    - task: SonarCloudAnalyze@1
      displayName: sonar run analysis

    - task: SonarCloudPublish@1
      displayName: sonar analysis publish
      inputs:
        pollingTimeoutSec: '300'
      