# trigger on main push
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - azure-pipelines.yml
    - Fakebook.Profile

pr:
  branches:
    include:
    - '*'
  paths:
    include:
    - azure-pipelines.yml
    - Fakebook.Profile

pool:
  vmImage: ubuntu-latest

variables:
  targetSolution: Fakebook.Profile

stages:
- stage: analyze
  variables:
    buildConfiguration: Release
  jobs:
  - job: build
    steps:
    # use .net core 2 for sonar compatibility
    - task: UseDotNet@2
      displayName: dotnet sdk 2
      inputs:
        packageType: 'sdk'
        version: '2.x'

    - task: SonarCloudPrepare@1
      displayName: sonar prepare analysis
      inputs:
        SonarCloud: 'SonarCloud Token'
        organization: '2011-fakebook-project3'
        scannerMode: 'MSBuild'
        projectKey: '2011-fakebook-project3_profile'
        projectName: 'profile'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml
          sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx

    # switch to .net 5
    - task: UseDotNet@2
      displayName: dotnet sdk 5
      inputs:
        packageType: 'sdk'
        version: '5.x'

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: dotnet build
      workingDirectory: $(targetSolution)

    - task: DotNetCoreCLI@2
      displayName: dotnet test (failures disallowed)
      condition: and(succeeded(), in('refs/heads/main', variables['Build.SourceBranch'], variables['System.PullRequest.TargetBranch']))
      inputs:
        command: 'test'
        arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
        publishTestResults: true
        workingDirectory: '$(targetSolution)'

    - task: DotNetCoreCLI@2
      displayName: dotnet test (failures allowed)
      condition: and(succeeded(), notIn('refs/heads/main', variables['Build.SourceBranch'], variables['System.PullRequest.TargetBranch']))
      inputs:
        command: 'test'
        arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
        publishTestResults: true
        workingDirectory: '$(targetSolution)'

    - task: SonarCloudAnalyze@1
      displayName: sonar run analysis
      condition: always()

    - task: SonarCloudPublish@1
      displayName: sonar analysis publish
      condition: always()
      inputs:
        pollingTimeoutSec: '300'

- stage: docker
  dependsOn: []
  variables:
    imageName: fakebookprofile
  jobs:
  - job: build
    steps:
    - task: Docker@2
      displayName: docker build image
      inputs:
        repository: '$(imageName)'
        command: 'build'
        Dockerfile: '$(targetSolution)/Dockerfile'
