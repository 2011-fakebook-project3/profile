trigger:
  branches:
    include:
    - main

  paths:
    include:
    - azure-pipelines.yml
    - 'Fakebook.Profile'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  sdkVersion: '5.x'
  buildConfiguration: 'Release'
  targetProject: 'Fakebook.Profile/Fakebook.Profile.RestApi'
  targetSolution: 'Fakebook.Profile'

stages:
- stage: build
  jobs:
  - job: sonar_cloud_setup
    steps:
    - task: UseDotNet@2
      displayName: dotnet sdk 2.x
      inputs:
        packageType: 'sdk'
        version: '2.x'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud Token'
        organization: '2011-fakebook-project3'
        scannerMode: 'MSBuild'
        projectKey: '2011-fakebook-project3_profile'
        projectName: 'profile'
        extraProperties: 'sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml'
        
  - job: build
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 5 SDK'
      inputs:
        packageType: 'sdk'
        version: $(sdkVersion)
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: Docker@2
      displayName: docker build image
      inputs:
        repository: 'profile'
        command: 'build'
        Dockerfile: '**/Dockerfile'
      
  - job: test_and_analyze
    steps:
    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: 'test'
        arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
        publishTestResults: true
        workingDirectory: 'Fakebook.Profile'

    - task: SonarCloudAnalyze@1
      displayName: sonar run analysis

  - job: publish_sonarcloud_results
    steps:
    - task: SonarCloudPublish@1
      displayName: sonar analysis publish
      inputs:
        pollingTimeoutSec: '300'

  - job: docker
    # docker build here
